// JavaScript Document revised Jun 15, 2014
function openModal() {
    $("#modal-1").removeClass("invisible").addClass("visible");
}
function closeModal() {
    $("#modal-1").removeClass("visible").addClass("invisible");
}
function debugThis(debugString) {
	var debugString;
	var debugGraph=document.getElementById('debug');
	debugGraph.innerHTML=debugString;
}
function unhideAndHide(divID)
{
        var item = document.getElementById(divID);
        if (item)
        {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
}

function loadPracticeSession()
{
  var lessonSelected=document.getElementById('selectLesson').value;	
  var lessonNumber=parseInt(lessonSelected);
  var pageToOpen=lessonSelected+".html";
  window.open(pageToOpen,"_self");
}

function checkAnswer(correctAnswer,inputID,caseSensitive,twoNumbers)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{
		var answerEntered=document.getElementById(inputID).value;
		var gotIt;
		if (caseSensitive===false)
		{
			answerEntered=answerEntered.toLowerCase();	
		}
		var twoNumbers=extractLessonAndExerciseNumbers(inputID);
  	  if (answerEntered===correctAnswer)
		{
			gotIt=true;
			document.getElementById(inputID).style.backgroundColor = "#99ff66";						   			alert("Correct");
			colorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)
 	   }
	    else
	    {
	        unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]);  
	    }
	}
}

function showMapResult(twoNumbers,gotIt)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{
  	  if (gotIt===true)
		{		   
			alert("Correct");
			colorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)
 	   }
	    else
	    {
	        unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]);  
	    }
	}
}

function checkAnswerTimed(correctAnswer,inputID,caseSensitive,twoNumbers,timeGoal)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{
		var answerEntered=document.getElementById(inputID).value;
		var gotIt;
		if (caseSensitive===false)
		{
			answerEntered=answerEntered.toLowerCase();	
		}
		var twoNumbers=extractLessonAndExerciseNumbers(inputID);
	    if (answerEntered===correctAnswer)
		{
			document.getElementById(inputID).style.backgroundColor = "#99ff66";			
			var startTime=document.getElementById("storeStartTime").innerHTML;
			d=new Date();
			var endTime=d.getTime();
			var secondsElapsed=(endTime-startTime)/1000;
			secondsElapsed=Math.round(secondsElapsed);			
			if (secondsElapsed>timeGoal)
			{
				alert("Your code is correct, but...speed goal: "+timeGoal+" seconds. Your time: "+secondsElapsed+" seconds. Try again later.");
			gotIt=false;
			deleteAnswer(inputID);			
			}	
			else
			{
				alert("Your code is correct. Speed goal: "+timeGoal+" seconds. Your time: "+secondsElapsed+" seconds. Well done!");
				gotIt=true;	
			}	
			timedColorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)		   
  	  }
    else
 	   {
 	       unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]); 
			gotIt=false; 
	    }
	}
}

function extractLessonAndExerciseNumbers(inputID)
{
	var lessonNumber="";
	var exerciseNumber="";
	for (var i=6;i<inputID.length;i++)
	{
	  	if (inputID.slice(i,i+1)!=="-")
		{
			lessonNumber=lessonNumber+inputID.slice(i,i+1);
		}
		else
		{
			exerciseNumber=inputID.slice(i+1,inputID.length);
			break;	
		}
	}
	return [lessonNumber,exerciseNumber];	
}
///
function colorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)
{
	var arrayString=document.getElementById('storeExercises').innerHTML;
	var exercisesArray=arrayString.split(',');
	// alert("exercisesArray "+exercisesArray);
	var numberOfNumberToChange=parseInt(twoNumbers[1])+1;
	var numberIDAndImageName="num-"+numberOfNumberToChange;
	if (gotIt===true)
	{	

		document.getElementById(numberIDAndImageName).src=numberIDAndImageName+"-green.png";	
	}
	else 
	{
		document.getElementById(numberIDAndImageName).src=numberIDAndImageName+"-red.png";		
		exercisesArray.push(twoNumbers[1]);

		if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]))
		{
		unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]);
		}
	}
///// mm Toggle this to write and to test

	unhideAndHide("exercise-"+twoNumbers[0]+"-"+twoNumbers[1]);
	if (exercisesArray.length>1)
	{
		exercisesArray.shift();
	}
	else if (gotIt===true)
	{
		exercisesArray.shift();		
	}
	document.getElementById('storeExercises').innerHTML=exercisesArray;
	var nextExercise=exercisesArray[0];
	if (nextExercise)
	{		
		unhideAndHide("exercise-"+twoNumbers[0]+"-"+nextExercise);
		nextNumber=parseInt(nextExercise)+1;
		document.getElementById("num-"+nextNumber).src="num-"+nextNumber+"-white.png";					
		document.getElementById('storeExercises').innerHTML=exercisesArray;
	}
	else
	{
		    unhideAndHide("header");
			unhideAndHide("congratsGraph");	
	}
}

function timedColorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)
{
	var arrayString=document.getElementById('storeExercises').innerHTML;
	var exercisesArray=arrayString.split(',');
	// alert("exercisesArray "+exercisesArray);
	var numberOfNumberToChange=parseInt(twoNumbers[1])+1;
	var numberIDAndImageName="num-"+numberOfNumberToChange;
	if (gotIt===true)
	{	

		document.getElementById(numberIDAndImageName).src=numberIDAndImageName+"-green.png";		
	}
	else 
	{
		document.getElementById(numberIDAndImageName).src=numberIDAndImageName+"-red.png";		
		exercisesArray.push(twoNumbers[1]);
	}
// mm Toggle this to write and to test
	unhideAndHide("exercise-"+twoNumbers[0]+"-"+twoNumbers[1]);
	if (exercisesArray.length>1)
	{
		exercisesArray.shift();
	}
	else if (gotIt===true)
	{
		exercisesArray.shift();		
	}
	document.getElementById('storeExercises').innerHTML=exercisesArray;
	var nextExercise=exercisesArray[0];
	if (nextExercise)
	{		
		unhideAndHide("exercise-"+twoNumbers[0]+"-"+nextExercise);
		nextNumber=parseInt(nextExercise)+1;
		document.getElementById("num-"+nextNumber).src="num-"+nextNumber+"-white.png";					
		document.getElementById('storeExercises').innerHTML=exercisesArray;
	}
	else
	{
			unhideAndHide("congratsGraph");	
	}
}

function checkPattern(regEx,inputID,twoNumbers)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{	
		var codeEntered=document.getElementById(inputID).value;
		var quotationMark=String.fromCharCode(34);
		var singleQuote=String.fromCharCode(39);		
		for (var i=0;i<codeEntered.length;i++)
		{
			if (codeEntered.charAt(i)===quotationMark)
			{
			  codeEntered=codeEntered.slice(0,i)+"•"+codeEntered.slice(i+1);	
			}
			if (codeEntered.charAt(i)===singleQuote)
			{
			  codeEntered=codeEntered.slice(0,i)+"◘"+codeEntered.slice(i+1);	
			}			
		}
		var twoNumbers=extractLessonAndExerciseNumbers(inputID);
		var gotIt;	
		if (regEx.test(codeEntered)===true) {
			document.getElementById(inputID).style.backgroundColor = "#99ff66";
			for (var i = 0; i < codeEntered.length; i++) {
				if (i === 0) {
					if (codeEntered.charAt(0) === "•") {					
						codeEntered = '"' + codeEntered.slice(1);
					}
				}
				else if (codeEntered.charAt(i) === "•") {
					codeEntered = codeEntered.slice(0, i) + '"' + codeEntered.slice(i + 1);	
				}
			}
			alert("Correct");			
/*			var d = new Date();
			var start = d.getTime();
			for (var i = 0; i < 100000; i++) {
			  d = new Date();
			  var now = d.getTime();
			  if ((now - start) > 2000) {
				break;  
			  }
			}
*/
			colorizeNumberAndAdvanceToNextExercise(twoNumbers,true)			
	    }
	    else {
	        unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]); 	 
	    }	
	}
}


function checkPatternTimed(regEx,inputID,twoNumbers,timeGoal)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{
		var codeEntered=document.getElementById(inputID).value;
		var quotationMark=String.fromCharCode(34);
		var singleQuote=String.fromCharCode(39);		
		for (var i=0;i<codeEntered.length;i++)
		{
			if (codeEntered.charAt(i)===quotationMark)
			{
			  codeEntered=codeEntered.slice(0,i)+"•"+codeEntered.slice(i+1);	
			}
			if (codeEntered.charAt(i)===singleQuote)
			{
			  codeEntered=codeEntered.slice(0,i)+"◘"+codeEntered.slice(i+1);	
			}			
		}
		var twoNumbers=extractLessonAndExerciseNumbers(inputID);
		var gotIt;	
		if (regEx.test(codeEntered)===true)
		{
			document.getElementById(inputID).style.backgroundColor = "#99ff66";			
			var startTime=document.getElementById("storeStartTime").innerHTML;
			d=new Date();
			var endTime=d.getTime();
			var secondsElapsed=(endTime-startTime)/1000;
			secondsElapsed=Math.round(secondsElapsed);
			if (secondsElapsed>timeGoal)
			{
				alert("Your code is correct, but...speed goal: "+timeGoal+" seconds. Your time: "+secondsElapsed+" seconds. Try again later.");
				gotIt=false;
				deleteAnswer(inputID);
				document.getElementById(inputID).style.backgroundColor = "white";
			}	
			else
			{
				alert("Your code is correct. Speed goal: "+timeGoal+" seconds. Your time: "+secondsElapsed+" seconds. Well done!");
				gotIt=true;	
			}			   
			timedColorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt);
 	   }
 	   else
 	   {
 	       unhideAndHide("correction-"+twoNumbers[0]+"-"+twoNumbers[1]); 
 	   }
	}
}

function checkKeyPress1Finger(identifier,codeString,twoNumbers)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
		{		
		if (document.getElementById(identifier).innerHTML==="")
		{
			var codeStringLength=codeString.length	
			var onePart="";
			var codeParts=[];
			for (var i=0; i<codeStringLength; i++)
			{
				if (codeString.substring(i,i+1)!=="{")
				{
					onePart+=codeString.substring(i,i+1);	
				}
				else
				{
					if (codeString.substring(i+1,i+2)==="}")
					{
						codeParts.push(onePart);
						onePart="";
						i++;	
					}
					else
					{				
						onePart+="{";
					}
				}
			}
			document.getElementById('storeAnything').innerHTML=codeParts;
			document.getElementById('storeAnythingElse').innerHTML=codeParts.length;
			document.getElementById('storeAnythingAtAll').innerHTML=0;
		}
		var codePartsString=document.getElementById('storeAnything').innerHTML;
		var codePartsLength=document.getElementById('storeAnythingElse').innerHTML;
		var index=document.getElementById('storeAnythingAtAll').innerHTML;
		var codeParts=[];
		for (var i=0;i<codePartsLength;i++)
		{
			var segment="";
			for (var j=0;j<50;j++)
			{
				if (codePartsString.substring(j,j+1)!==",")
				{
					segment+=codePartsString.substring(j,j+1);	
				}
				else
				{
					break;	
				}
			}
			var segmentLength=segment.length;
			codePartsString=codePartsString.substring(segmentLength+1,codePartsString.length);

			if (segment.substring(0,7)==="4spaces")
			{
				segment="&nbsp;&nbsp;&nbsp;&nbsp;"+segment.substring(7,segmentLength);
			segmentLength=segment.length;
			}		
			if (segment.substring(0,7)==="2spaces")
			{
				segment="&nbsp;&nbsp;"+segment.substring(7,segmentLength);	
				segmentLength=segment.length;			
			}
			if (segment.substring(0,6)==="1space")
			{
				segment="&nbsp;"+segment.substring(6,segmentLength);
				segmentLength=segment.length;	
			}
			if (segment.substring(0,13)==="greaterthan ")
			{
				segment="> "+segment.substring(12,segmentLength);
				segmentLength=segment.length;				
			}				
			if (segment.substring(0,12)==="greaterthan")
			{
				segment=">"+segment.substring(12,segmentLength);
				segmentLength=segment.length;				
			}		
/*
If it's less than put a space before the next piece.
*/
			if (segment.substring(0,10)==="lessthan ")
			{
				segment="< "+segment.substring(8,segmentLength);
				segmentLength=segment.length;				
			}	

			if (segment.substring(0,9)==="lessthan")
			{
				segment=String.fromCharCode(60)+segment.substring(8,segmentLength);
				segmentLength=segment.length;				
			}			
			if (segment.substring(0,5)==="comma")
			{
				segment=","+segment.substring(5,segmentLength);
				segmentLength=segment.length;				
			}							
			if (segment.substring(segmentLength-9,segmentLength)==="linebreak")
			{
				segment=segment.substring(0,segmentLength-9)+"<br>";
				segmentLength=segment.length;			
			}	
			codeParts.push(segment);	
		}
 	   index=parseInt(index);
		var nextWord=codeParts[index];
		var correctInitialCharacter
		if (nextWord.substring(0,6)!=="&nbsp;")
		{
			correctInitialCharacter=nextWord.substring(0,1);	
		}		
		else if (nextWord.substring(0,24)==="&nbsp;&nbsp;&nbsp;&nbsp;")
		{
			correctInitialCharacter=nextWord.substring(24,25);
		}	
		else if (nextWord.substring(0,12)==="&nbsp;&nbsp;")
		{
			correctInitialCharacter=nextWord.substring(12,13);
		}
		else
		{
			correctInitialCharacter=nextWord.substring(6,7);	
		}
	
		var characterEntered=document.getElementById(identifier+"Input").value;
		if (characterEntered===" ")
		{
			alert("Don\'t type spaces or carriage returns. I\'ll supply them");
			document.getElementById(identifier+"Input").value="";		
			return;	
		}
		if (characterEntered===correctInitialCharacter)
		{
			if (correctInitialCharacter==="<")
			{
				var stringToDisplay=document.getElementById(identifier).innerHTML+"&lt;";
			}
			else
			{
				var stringToDisplay=document.getElementById(identifier).innerHTML+codeParts[index];
		}
			document.getElementById(identifier).innerHTML=stringToDisplay;	
			document.getElementById('storeAnythingAtAll').innerHTML=index+1;
		}
		document.getElementById(identifier+"Input").value="";
		// I don't know why I have to do this. If I just use index, it gets screwed up.
		var indexNotScrewedUp=parseInt(document.getElementById('storeAnythingAtAll').innerHTML)-1;
		if (indexNotScrewedUp===codePartsLength-1)
		{	
			if (index===codePartsLength-1)
			{
//				document.getElementById(identifier).innerHTML="";				
				document.getElementById(identifier).style.backgroundColor = "#99ff66";
				alert("Well done.");	
				colorizeNumberAndAdvanceToNextExercise(twoNumbers,true);				
			}
		}
	}
}
///////
function checkKeyPress1FingerTimed(identifier,codeString,twoNumbers,timeGoal)
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{
	if (document.getElementById(identifier).innerHTML==="")
	{
		var codeStringLength=codeString.length	
		var onePart="";
		var codeParts=[];
		for (var i=0; i<codeStringLength; i++)
		{
			if (codeString.substring(i,i+1)!=="{")
			{
				onePart+=codeString.substring(i,i+1);	
			}
			else
			{
				if (codeString.substring(i+1,i+2)==="}")
				{
					codeParts.push(onePart);
					onePart="";
					i++;	
				}
				else
				{				
					onePart+="{";
				}
			}
		}
		document.getElementById('storeAnything').innerHTML=codeParts;
		document.getElementById('storeAnythingElse').innerHTML=codeParts.length;
		document.getElementById('storeAnythingAtAll').innerHTML=0;
	}
	var codePartsString=document.getElementById('storeAnything').innerHTML;
	var codePartsLength=document.getElementById('storeAnythingElse').innerHTML;
	var index=document.getElementById('storeAnythingAtAll').innerHTML;
	var codeParts=[];
	for (var i=0;i<codePartsLength;i++)
	{
		var segment="";
		for (var j=0;j<50;j++)
		{
			if (codePartsString.substring(j,j+1)!==",")
			{
				segment+=codePartsString.substring(j,j+1);	
			}
			else
			{
				break;	
			}
		}
		var segmentLength=segment.length;
		codePartsString=codePartsString.substring(segmentLength+1,codePartsString.length);

		if (segment.substring(0,7)==="4spaces")
		{
			segment="&nbsp;&nbsp;&nbsp;&nbsp;"+segment.substring(7,segmentLength);
			segmentLength=segment.length;
		}		
		if (segment.substring(0,7)==="2spaces")
		{
			segment="&nbsp;&nbsp;"+segment.substring(7,segmentLength);	
			segmentLength=segment.length;			
		}
		if (segment.substring(0,6)==="1space")
		{
			segment="&nbsp;"+segment.substring(6,segmentLength);
			segmentLength=segment.length;	
		}	
		if (segment.substring(0,12)==="greaterthan")
		{
			segment=">"+segment.substring(12,segmentLength);
			segmentLength=segment.length;				
		}
		if (segment.substring(0,8)==="lessthan")
		{
			segment=String.fromCharCode(60)+segment.substring(8,segmentLength);
			segmentLength=segment.length;				
		}		
		if (segment.substring(0,5)==="comma")
		{
			segment=","+segment.substring(5,segmentLength);
			segmentLength=segment.length;				
		}							
		if (segment.substring(segmentLength-9,segmentLength)==="linebreak")
		{
			segment=segment.substring(0,segmentLength-9)+"<br>";
			segmentLength=segment.length;			
		}	
		codeParts.push(segment);	
	}
    index=parseInt(index);
	var nextWord=codeParts[index];
	var correctInitialCharacter
	if (nextWord.substring(0,6)!=="&nbsp;")
	{
		correctInitialCharacter=nextWord.substring(0,1);	
	}		
	else if (nextWord.substring(0,24)==="&nbsp;&nbsp;&nbsp;&nbsp;")
	{
		correctInitialCharacter=nextWord.substring(24,25);
	}	
	else if (nextWord.substring(0,12)==="&nbsp;&nbsp;")
	{
		correctInitialCharacter=nextWord.substring(12,13);
	}
	else
	{
		correctInitialCharacter=nextWord.substring(6,7);	
	}
	
	var characterEntered=document.getElementById(identifier+"Input").value;
	if (characterEntered===" ")
	{
		alert("Don\'t type spaces or carriage returns. I\'ll supply them");
		document.getElementById(identifier+"Input").value="";		
		return;	
	}
	if (characterEntered===correctInitialCharacter)
	{
		if (correctInitialCharacter==="<")
		{
			var stringToDisplay=document.getElementById(identifier).innerHTML+"&lt;";
		}
		else
		{
			var stringToDisplay=document.getElementById(identifier).innerHTML+codeParts[index];
		}
		document.getElementById(identifier).innerHTML=stringToDisplay;	
		document.getElementById('storeAnythingAtAll').innerHTML=index+1;
	}
	document.getElementById(identifier+"Input").value="";
	// I don't know why I have to do this. If I just use index, it gets screwed up.
	var indexNotScrewedUp=parseInt(document.getElementById('storeAnythingAtAll').innerHTML)-1;
	if (indexNotScrewedUp===codePartsLength-1)
	{	
		if (index===codePartsLength-1)
		{
		var startTime=document.getElementById("storeStartTime").innerHTML;
		d=new Date();
		var endTime=d.getTime();
		var secondsElapsed=(endTime-startTime)/1000;
		secondsElapsed=Math.round(secondsElapsed);
    	window.alert("That's correct. Let's check your time."); 
			if (secondsElapsed>timeGoal)
			{
				alert("The speed goal is to complete the exercise within "+timeGoal+" seconds. You completed it in "+secondsElapsed+" seconds. Sorry. You\'ll get another shot at it later.");
				gotIt=false;
			}	
			else
			{
			document.getElementById(identifier).style.backgroundColor = "#99ff66";					
			alert("The speed goal is to complete the exercise within "+timeGoal+" seconds. You completed it in "+secondsElapsed+" seconds. Well done!");
			gotIt=true;	
			}			   
    }
		timedColorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)	
		document.getElementById(identifier).innerHTML="";
	}
	}
}

function checkKeypressBeep(identifier,correctCode,twoNumbers) 
{
	if (document.getElementById("correction-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="hidden") // Otherwise, will be able to try again after mistake.
	{	
	  var whatsInField=document.getElementById(identifier).value;
	  var whatsInFieldCharNums=[]; 
	  var inputLength=whatsInField.length;
	  for (var i=0;i<inputLength;i++)
	  {
		  whatsInFieldCharNums.push(whatsInField.charCodeAt(i))
	  }
	  var inputIndex=inputLength-1
	  var correctCurrentCharCode=correctCode.charCodeAt(inputIndex);
	  if (correctCurrentCharCode===198)
 	  {
		correctCurrentCharCode=10;  
 	  }
	  if (whatsInFieldCharNums[inputIndex]===correctCurrentCharCode)
 	  {
		  if (inputIndex===correctCode.length-1)
		  {
//      playSound("click");	
		    if (document.getElementById("exercise-"+twoNumbers[0]+"-"+twoNumbers[1]).className==="unhidden") //so doesn't go twice
		    {  
			  document.getElementById(identifier).style.backgroundColor = "#99ff66";
			  alert("Well done.");
	      	  colorizeNumberAndAdvanceToNextExercise(twoNumbers,true);  
		    }
	  	  }
  	  }
  	  else
 	  {
		document.getElementById(identifier).value=whatsInField.substring(0,inputLength-1);
//		playSound("quack");  
  	  }
	}
}

function stopTimerAndEvalDrag2(timeGoal,correctCodePage)
{
	var startTime=document.getElementById("storeStartTime").innerHTML;
	d=new Date();
	var endTime=d.getTime();
	var secondsElapsed=(endTime-startTime)/1000;
	secondsElapsed=Math.round(secondsElapsed);
	if (secondsElapsed>timeGoal)
	{
		if (secondsElapsed>300) //meaning that they didn't start the timer
		{
			alert("Sorry, you didn\'t start the timer. Please move the pieces off the screen, click the button to start the timer, and begin again.")
		}
		else
		{
			alert("The speed goal is to complete the exercise within "+timeGoal+" seconds. You completed it in "+secondsElapsed+" seconds. You\'ll get another shot at this later.");
			var gotIt="false";
		    timedColorizeNumberAndAdvanceToNextExercise(twoNumbers,gotIt)						
		}
	}
	else
	{	
		alert("The speed goal is to complete the exercise within "+timeGoal+" seconds. You completed it in "+secondsElapsed+" seconds. Good speed. Now let's see if your code is correct.");
		window.open(
	correctCodePage
,'mywindow','width=690,height=400, top=300,left=500');	
	}
}

var scriptTag="<script>";
var closeTag="<\/script>";
function openCodingResultsWindowWithTags(code)
{ 
	var code="Did your code run in this window as you expected it to? Congratulations. <br>If nothing happened after this window opened, there is an error in your code.<br>Close this window to continue."+scriptTag+code+closeTag;
    var newWindow = window.open('results.html','mywindow','height=400,width=600, top=100,left=325');
    newWindow.document.write(code);
}

function openNoTags(code)
{ 
	var code="Did your code run in this window as you expected it to? Congratulations. <br>If nothing happened after this window opened, there is an error in your code.<br>Close this window to continue."+code;
    var newWindow = window.open('results.html','mywindow','height=400,width=600, top=100,left=325');
    newWindow.document.write(code);
}

function openNoTagsSpecial(code)
{ 
	var code="<br><br><span style='font-size:14px;'>"+code+"</span><br><br><br><br><br>Did your code run in this window as you expected it to? Congratulations. If nothing happened after this window opened, there is an error in your code. Close this window to continue.";
    var newWindow = window.open('results.html','mywindow','height=400,width=600, top=100,left=325');
    newWindow.document.write(code);
}


function startTimer()
{
	var d=new Date();
	var startTime=d.getTime();		
	document.getElementById('storeStartTime').innerHTML=startTime;	
}

function playSound(soundObj) {
  var sound = document.getElementById(soundObj);
  sound.Play();
}

function getImageList()
{
	var images = document.getElementsByTagName('img'); 
	var srcList = "";
	var preloadList="Opening bracket replaced with } to keep lines from executing. Have to replace <img src=' with start of tag. Go to textmechanic.com slashRemove-Duplicate-Lines.html<br>"
	var imageName="";
	for(var i = 0; i < images.length; i++)
	{
		var imageNameWithPath=images[i].src;
		var lengthWithPath=imageNameWithPath.length;
		for (var j=lengthWithPath;j>=0;j--)
		{
			if (imageNameWithPath.substring(j,j+1)==="/")
			{
				imageName=imageNameWithPath.substring(j+1,lengthWithPath);
				break;
			}
		}
    	srcList+=imageName;
		preloadList+="xxx"+imageName+"\' width=\'1\' height=\'1\'><br>";
	}
	document.getElementById('preload').innerHTML=preloadList;
}

function deleteAnswer(inputID) {
	document.getElementById(inputID).value=""; 
}

function addBackForLive(inputID, content) {
	document.getElementById(inputID).value=content; 
}

function clearParagraph(inputID) {
	document.getElementById(inputID).innerHTML=""; 
}

var iPadLabels = function () {																																																												function fix() {																																																															var labels = document.getElementsByTagName('label'), 																																																																			target_id, el;																																																																										for (var i = 0; labels[i]; i++) {																																																																											if (labels[i].getAttribute('for')) {																																																																																				labels[i].onclick = labelClick;																																																																																								}																																																																																											}																																																																																													};																																																																																																																																																																																												function labelClick() {																																																																																																			el = document.getElementById(this.getAttribute('for'));																																																																																																						if (['radio', 'checkbox'].indexOf(el.getAttribute('type')) != -1) {																																																																																																									el.setAttribute('selected', !el.getAttribute('selected'));																																																																																																											} else {																																																																																																																		el.focus();																																																																																																																			}																																																																																																																				};																																																																																																																								return {																																																																																																																											fix: fix																																																																																																																														}																																																																																																																															}();	

function checkForPopBlocker() {
  var testPop = window.open("", "", 
    "width=100,height=100");  
  if (testPop === null ||
      typeof(testPop) === "undefined") {	
	  alert("Popups are used in some exercises. Please disable your popup blocker for this site."); 
  } 
  testPop.close();
}	

function noMobile() {
  if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
     window.location.replace("no-mobile.html");
  }
}

function validateOrderCertificateForm() {
  if (document.getElementById("email-name").value.length === 0) {
    alert("Please enter your full name for the certificate");
    return false;
  }
  if (document.getElementById("email-email").value.length === 0) {
    alert("Please enter your email address");
    return false;
  }
  var wholePath = window.location.pathname;
  var pg = wholePath.slice(4, wholePath.length-5);
  document.getElementById("pageName").value = pg;
}																																																																																																																																																																																																																																																															

function validateEmailForm() {
  if (document.getElementById("email-first-name").value.length === 0) {
    alert("Please enter your first name");
    return false;
  }
  if (document.getElementById("email-last-name").value.length === 0) {
    alert("Please enter your last name");
    return false;
  }
  if (document.getElementById("email-email").value.length === 0) {
    alert("Please enter your email address");
    return false;
  }
  if (document.getElementById("box1").checked === true && document.getElementById("ex-no").value.length === 0) {
	alert("In the form please enter an exercise number in the box.");
	return false;
  }
  var wholePath = window.location.pathname;
  var pg = wholePath.slice(4, wholePath.length-5);
  document.getElementById("pageName").value = pg;
}
function validateRegistrationForm() {
  if (document.getElementById("registration-first-name").value.length === 0) {
    alert("Please enter your first name");
    return false;
  }
  if (document.getElementById("registration-last-name").value.length === 0) {
    alert("Please enter your last name");
    return false;
  }
  if (document.getElementById("registration-email").value.length === 0) {
    alert("Please enter your email address");
    return false;
  }
  storeRegistration();
}
function openWindow(url,name,features) {
  var myWindow = window.open(url,name,features);
}
function storeRegistration() {
  document.cookie =
  'mycookie=registered; expires=Sat, 31 Dec 2050 20:47:11 UTC; path=/'
}
function checkForCookie() {
  var name = "mycookie" + "=";
  var ca = document.cookie.split(";");
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i].trim();
	if (c.indexOf(name) === 0) {
	  return;
	}
  }
  var myWindow = window.open("register.html", "_self");
}

function goToExercise() {
  var wholePath = window.location.pathname;
  var pg = wholePath.slice(4, wholePath.length-5);
//  document.getElementById("pageName").value = pg;
  if (pg === "1-registered") {
	  pg = "1";
  }
  var exerciseToGoTo = document.getElementById("skipTo").value; 
  var makeInvisible = document.getElementById("exercise-"+pg+"-0");
  makeInvisible.className='hidden';
  var makeVisible = document.getElementById("exercise-"+pg+"-"+(exerciseToGoTo-1));
  makeVisible.className='unhidden';  
}

// Simple Debug, written by Chris Klimas
// licensed under the GNU LGPL. 
// http://www.gnu.org/licenses/lgpl.txt 
// // There are three functions defined here: 
// // log (message) 
// Logs a message. Every second, all logged messages are displayed 
// in an alert box. This saves you from having to hit Return a ton 
// of times as your script executes. 
// // inspect (object) 
// Logs the interesting properties an object possesses. Skips functions 
// and anything in CAPS_AND_UNDERSCORES. 
// // inspectValues (object) 
// Like inspect(), but displays values for the properties. The output 
// for this can get very large -- for example, if you are inspecting 
// a DOM element. 
function log (message) { if (! _log_timeout) _log_timeout = window.setTimeout(dump_log, 1000); _log_messages.push(message); function dump_log() { var message = ''; for (var i = 0; i < _log_messages.length; i++) message += _log_messages[i] + '\n'; alert(message); _log_timeout = null; delete _log_messages; _log_messages = new Array(); } } function inspect (obj) { var message = 'Object possesses these properties:\n'; if (obj) { for (var i in obj) { if ((obj[i] instanceof Function) || (obj[i] == null) || (i.toUpperCase() == i)) continue; message += i + ', '; } message = message.substr(0, message.length - 2); } else message = 'Object is null'; log(message); } function inspectValues (obj) { var message = ''; if (obj) for (var i in obj) { if ((obj[i] instanceof Function) || (obj[i] == null) || (i.toUpperCase() == i)) continue; message += i + ': ' + obj[i] + '\n'; } else message = 'Object is null'; log(message); } var _log_timeout; var _log_messages = new Array();